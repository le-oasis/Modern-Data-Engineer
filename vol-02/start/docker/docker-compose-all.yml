version: '3'

services:

# MySQL DB
  mysql:
    image: mysql:8.0.23
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - ${PWD}/data/mysqldir:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      interval: 5s
      retries: 10
    ports:
      - 3306:3306
    networks:
      - oasiscorp
    hostname: mysql



# Jupyter Notebook - PySpark Enabled
  jupyter:
        image: 'jupyter/pyspark-notebook:spark-3.2.0'
        hostname: myjupyter
        container_name: jupyter
        networks:
            - oasiscorp
        ports:
          - "8888:8888"
        env_file:
        - .env
        volumes:
          - ${PWD}/lakehouse/jupyter-notebooks:/home/jovyan/work/notebooks/
          - ${PWD}/lakehouse/spark/resources/data:/home/jovyan/work/data/
          - ${PWD}/lakehouse/spark/resources/jars:/home/jovyan/work/jars/
          - ${PWD}/lakehouse/spark/conf:/usr/local/spark/conf
          - ${PWD}/lakehouse/spark/sql:/usr/local/spark/sql/
        restart: always


# Zepplin Notebook - PySpark Enabled
  zeppelin:
    build:
            context: ./lakehouse/zepplin
    container_name: zeppelin
    volumes:
      - ${PWD}/lakehouse/zepplin/notebook:/notebook
      - ${PWD}/lakehouse/zepplin/logs:/logs
      - ${PWD}/lakehouse/spark/resources/data:/learn
      # - ${SPARK_HOME}:/spark
    environment:
      # - SPARK_HOME=/spark
      - ZEPPELIN_LOG_DIR=/logs
      - ZEPPELIN_NOTEBOOK_DIR=/notebook
      - ZEPPELIN_ADDR=0.0.0.0
      - ZEPPELIN_SPARK_MAXRESULT=10000
      - ZEPPELIN_INTERPRETER_OUTPUT_LIMIT=204800
    healthcheck:
      interval: 5s
      retries: 10
    ports:
      - 8089:8080
    networks:
      - oasiscorp
    hostname: "zeppelin"


# Postgres DB
  postgres:
    hostname: oasispostgres
    container_name: postgres_container
    build:
      context: ./lakehouse/postgres
      dockerfile: Dockerfile
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
      - ./lakehouse/postgres/create_ranger_users.sql:/docker-entrypoint-initdb.d/create_ranger_users.sql
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
    restart: always
    networks:
     - oasiscorp

     

# Volumes 
volumes:
  postgres-db-volume:

networks:
  oasiscorp:
    driver: bridge